<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.order.dao.ExcelFieldsDao">

    <select id="get" resultType="com.bootdo.order.domain.ExcelFieldsDO">
		select `module_name`,`excel_field_name` from order_excel_fields where module_name = #{value}
	</select>

    <select id="list" resultType="com.bootdo.order.domain.ExcelFieldsDO">
        select `module_name`,`excel_field_name` from order_excel_fields
        <where>
            <if test="moduleName != null and moduleName != ''">and module_name = #{moduleName}</if>
            <if test="excelFieldName != null and excelFieldName != ''">and excel_field_name = #{excelFieldName}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by module_name desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from order_excel_fields
        <where>
            <if test="moduleName != null and moduleName != ''">and module_name = #{moduleName}</if>
            <if test="excelFieldName != null and excelFieldName != ''">and excel_field_name = #{excelFieldName}</if>
        </where>
    </select>

    <insert id="save" parameterType="com.bootdo.order.domain.ExcelFieldsDO">
		insert into order_excel_fields
		(
			`module_name`, 
			`excel_field_name`
		)
		values
		(
			#{moduleName},
			#{excelFieldName}
		)
	</insert>

    <update id="update" parameterType="com.bootdo.order.domain.ExcelFieldsDO">
        update order_excel_fields
        <set>
            <if test="excelFieldName != null">`excel_field_name` = #{excelFieldName}</if>
        </set>
        where module_name = #{moduleName}
    </update>

    <delete id="remove">
		delete from order_excel_fields where module_name = #{moduleName}
	</delete>

    <delete id="batchRemove">
        delete from order_excel_fields where module_name in
        <foreach item="moduleName" collection="array" open="(" separator="," close=")">
            #{moduleName}
        </foreach>
    </delete>

</mapper>